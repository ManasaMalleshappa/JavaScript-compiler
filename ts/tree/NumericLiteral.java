
package ts.tree;

import ts.Location;
import ts.tree.visit.TreeVisitor;
import ts.tree.type.NumberType;

/**
 * AST numeric literal expression leaf node
 *
 */
public final class NumericLiteral extends Expression {
	private double value;

	/**
	 * Construct a numeric literal tree node.
	 *
	 * @param loc
	 *            the source code location of the identifier.
	 * @param value
	 *            the value of the literal.
	 */
	public NumericLiteral(final Location loc, final double value) {
		super(loc);
		this.setType(NumberType.getInstance());
		this.value = value;
	}

	/**
	 * Get the value of the literal.
	 *
	 * @return the value of the literal.
	 */
	public double getValue() {
		return value;
	}

	/**
	 * Apply a visitor to the node.
	 *
	 * @param visitor
	 *            the visitor to apply.
	 *
	 * @return the value generated by the visitor.
	 */
	@Override
	public <T> T apply(TreeVisitor<T> visitor) {
		return visitor.visit(this);
	}
}
