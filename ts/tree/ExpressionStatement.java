
package ts.tree;

import ts.Location;
import ts.tree.visit.TreeVisitor;

/**
 * AST expression statement node
 *
 */
public final class ExpressionStatement extends Statement {
	private Expression exp;

	/**
	 * Construct an expression statement.
	 *
	 * @param loc
	 *            the source code location of the expression.
	 * @param exp
	 *            the expression subtree.
	 */
	public ExpressionStatement(final Location loc, final Expression exp) {
		super(loc);
		this.exp = exp;
	}

	/**
	 * Get the expression subtree of the node.
	 *
	 * @return the expression subtree.
	 */
	public Expression getExp() {
		return exp;
	}

	/**
	 * Apply a visitor to the node.
	 *
	 * @param visitor
	 *            the visitor to apply.
	 *
	 * @return the value generated by the visitor.
	 */
	@Override
	public <T> T apply(TreeVisitor<T> visitor) {
		return visitor.visit(this);
	}
}
